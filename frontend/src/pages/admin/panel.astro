---
import Layout from '@layouts/Layout.astro'
import { fetchConcurso } from '@lib/fetchConcurso'
import { fetchUsuarios } from '@lib/fetchUsuarios'
import { Plus } from '@lucide/astro'
import WarpBackground from '@components/WarpBackground.tsx'
import type { Concurso, Usuario } from '@lib/types/types'
import ConcursoAdminCard from '@components/ConcursoAdminCard.astro'
import ModalEliminar from '@components/ModalEliminar.astro'
import UsuarioAdminCard from '@components/UsuarioAdminCard.astro'
import { fetchFotosPendientesPorConcurso } from '@lib/fetchFotosPendientesPorConcurso'
import FotoPendienteCard from '@components/FotoPendienteCard.tsx'

const concursos: Concurso[] = await fetchConcurso()
const usuarios: Usuario[] = await fetchUsuarios(
  Astro.request.headers.get('cookie') ?? ''
)

// Para cada concurso, carga sus fotos pendientes
const fotosPendientesPorConcurso = await Promise.all(
  concursos.map(async (c) => ({
    concurso: c,
    fotos: await fetchFotosPendientesPorConcurso(
      c.id,
      Astro.request.headers.get('cookie') ?? ''
    ),
  }))
)

const user = Astro.locals.user ?? null
---

<Layout user={user} title="Panel Administración | RallyShot">
  <main
    class="min-h-screen bg-zinc-900 flex flex-col items-center justify-start pt-24"
  >
    <section class="relative w-full max-w-4xl px-4 mb-24">
      <div
        class="absolute -inset-x-8 -top-8 -bottom-8 z-0 rounded-2xl overflow-hidden border border-zinc-700"
      >
        <WarpBackground
          color1="#0f2f1c"
          color2="#1a5e3f"
          color3="#4ade80"
          speed={0.45}
          swirl={3.2}
          swirlIterations={12}
          shapeScale={0.65}
          client:load
        />
      </div>

      <article
        class="relative z-10 w-full p-6 mt-8 bg-zinc-800 rounded-2xl border border-zinc-700 shadow-lg"
      >
        <header class="mb-4 mt-6 text-center">
          <h1
            id="panel-title"
            class="text-3xl font-bold text-gray-100 tracking-wide"
          >
            Panel de Administración
          </h1>
        </header>

        <section aria-labelledby="concursos-title" class="space-y-4">
          <div class="flex items-start justify-between mb-3">
            <h3
              id="concursos-title"
              class="mt-6 text-xl font-semibold text-gray-200"
            >
              Concursos registrados:
            </h3>

            <div role="group" aria-label="acciones">
              <a
                href="/admin/crear-concurso"
                class="mt-6 inline-flex items-center gap-2 px-3 py-2 bg-green-800 text-white text-sm border border-green-500 rounded-md hover:opacity-85 hover:border-green-400 transition shadow"
                view-transition
              >
                <Plus class="w-4 h-4 text-green-500" />
                <span>Crear concurso</span>
              </a>
            </div>
          </div>

          {
            concursos.length === 0 ? (
              <p class="text-gray-400">No hay concursos aún.</p>
            ) : (
              concursos.map((concurso) => (
                <ConcursoAdminCard concurso={concurso} />
              ))
            )
          }
        </section>

        <section class="mt-10">
          <section class="mt-12 space-y-4">
            <h3 class="text-xl font-semibold text-gray-200 mb-4">
              Usuarios registrados:
            </h3>
            {
              usuarios.length === 0 ? (
                <p class="text-gray-400">No hay usuarios aún.</p>
              ) : (
                usuarios
                  .filter((u) => u.id !== user?.id) // Excluye a ti mismo
                  .map((usuario) => <UsuarioAdminCard usuario={usuario} />)
              )
            }
          </section>
        </section>

        <section class="mt-12 space-y-8">
          <h3 class="text-xl font-semibold text-gray-200">
            Fotografías pendientes por concurso:
          </h3>
          {
            fotosPendientesPorConcurso.map(({ concurso, fotos }) => {
              if (fotos.length === 0) return null

              return (
                <div>
                  <h4 class="text-lg font-medium text-green-400 mb-2">
                    {concurso.titulo}
                  </h4>
                  <div class="grid gap-4 sm:grid-cols-2 lg:grid-cols-3">
                    {fotos.map((foto) => (
                      <FotoPendienteCard client:load foto={foto} />
                    ))}
                  </div>
                </div>
              )
            })
          }
        </section>
      </article>
    </section>
  </main>

  <ModalEliminar />

  <!-- El formulario de edición permanece sin cambios -->
</Layout>
