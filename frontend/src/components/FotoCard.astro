---
/// <reference types="astro/client" />
// src/components/FotoCard.astro
import { Calendar, User, Heart } from '@lucide/astro'
import { Image } from 'astro:assets'

interface PhotoCardProps {
  id: string
  titulo: string
  descripcion?: string
  url_imagen: string
  fecha_subida: string
  total_votos: number
  autor: string
}

const {
  id,
  titulo,
  descripcion,
  url_imagen,
  fecha_subida,
  total_votos,
  autor,
} = Astro.props as PhotoCardProps
---

<article class="bg-primary rounded-lg overflow-hidden border border-gray-700">
  <!-- Imagen y overlay -->
  <div
    class="group relative w-full flex justify-center items-center bg-primary max-h-[32rem] overflow-hidden transition-all duration-300 ease-in-out hover:scale-[1.02] hover:z-10"
  >
    <div
      class="absolute w-[90%] h-[70%] rounded-full opacity-0 group-hover:opacity-60 transition-opacity duration-500 blur-2xl z-0 top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-gradient-to-br from-blue-500 via-blue-600 to-sky-500"
      style="z-index: 1;"
    >
    </div>
    <div
      class="relative w-full object-contain max-h-[32rem] fullscreenable transition-transform duration-300 ease-in-out mb-0"
      style="width: 800px; height: 1250px; z-index: 2;"
    >
      <Image
        src={url_imagen}
        alt={titulo}
        width="800"
        height="1250"
        style="width: 100%; height: 100%; object-fit: contain;"
      />
    </div>
  </div>

  <!-- Contenido principal: título, descripción, autor -->
  <div class="p-6 mb-10">
    <h2
      class="text-3xl font-bold text-center font-merriweather text-gray-100 mb-1"
    >
      {titulo.replace(/^\"(.*)\"$/, '$1')}
    </h2>

    <p class="text-gray-400 text-center text-lg mb-4 italic">
      {descripcion || 'Sin descripción.'}
    </p>

    <p class="text-gray-400 text-base mb-4 ml-22 flex items-center gap-2">
      <User class="w-4 h-4 text-gray-400" />
      <span>Autor: <span class="text-gray-200">{autor}</span></span>
    </p>

    <!-- Fecha y voto -->
    <div
      class="flex items-center justify-between text-base text-gray-400 ml-22"
    >
      <!-- Fecha de subida -->
      <div class="flex items-center gap-1">
        <Calendar class="w-4 h-4" />
        <time class="text-gray-200" datetime={fecha_subida}>
          {new Date(fecha_subida).toLocaleDateString()}
        </time>
      </div>

      <!-- Botón de voto con corazón -->
      <div class="flex items-center gap-2">
        <button
          class="vote-btn p-1 rounded-full transition"
          data-photo-id={id}
          aria-label="Votar esta foto"
        >
          <Heart class="w-6 h-6 transition-colors" />
        </button>
        <span class="vote-count text-lg text-blue-600">{total_votos}</span>
      </div>
    </div>
  </div>

  <!-- Script cliente que llama al endpoint de Astro -->
  <script client:load>
    console.log('FotoCard hydrated for:', '${id}')
    const storageKey = 'votedPhotos'
    const photoId = '${id}'

    // Seleccionar elementos
    const btn = document.querySelector(`.vote-btn[data-photo-id="${photoId}"]`)
    if (!btn) return
    const icon = btn.querySelector('svg')
    const countSpan = btn.nextElementSibling

    // Cargar votos previos
    let voted = JSON.parse(localStorage.getItem(storageKey) || '[]')
    icon.classList.add(
      voted.includes(photoId) ? 'text-red-500' : 'text-gray-400'
    )

    btn.addEventListener('click', async () => {
      if (voted.includes(photoId)) return

      try {
        const res = await fetch('/api/votos', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ photoId }),
        })
        if (!res.ok) throw new Error(`HTTP ${res.status}`)

        // Actualizar cache y UI
        voted.push(photoId)
        localStorage.setItem(storageKey, JSON.stringify(voted))
        icon.classList.replace('text-gray-400', 'text-red-500')
        countSpan.textContent = String(Number(countSpan.textContent) + 1)
      } catch (err) {
        console.error('Error al votar:', err)
      }
    })
  </script>
</article>
